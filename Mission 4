import pandas as pd
import re

# CSV laden und Spaltennamen bereinigen
jeopardy = pd.read_csv("jeopardy.csv")
jeopardy.columns = jeopardy.columns.str.strip()  # entfernt Leerzeichen an den Rändern

# Float-Wert-Spalte hinzufügen
def add_float_value_column(df):
    def parse_value(value):
        if isinstance(value, str) and value.startswith('$'):
            try:
                return float(value.replace('$', '').replace(',', ''))
            except:
                return None
        return None
    df['Float Value'] = df['Value'].apply(parse_value)
    return df

jeopardy = add_float_value_column(jeopardy)

# Filterfunktion für einzelne Wörter (vermeidet Warnung durch non-capturing group)
def filter_questions_by_word(df, word):
    pattern = rf"\b{re.escape(word)}(?:'s)?\b"
    mask = df['Question'].str.contains(pattern, flags=re.IGNORECASE, regex=True)
    return df[mask]

# Filterfunktion für mehrere Wörter mit exaktem Match
def count_questions_with_exact_words(df, column_name, search_words):
    df = df.dropna(subset=[column_name])
    df[column_name] = df[column_name].astype(str)
    search_patterns = [rf"\b{re.escape(word)}(?:'s)?\b" for word in search_words]  # <- fix hier
    def match_exact(text):
        return all(re.search(pattern, text, re.IGNORECASE) for pattern in search_patterns)
    mask = df[column_name].apply(match_exact)
    return mask.sum(), df[mask]

# Fragen mit dem Wort "King" extrahieren
king_df = filter_questions_by_word(jeopardy, "History")

# Durchschnittlicher Float-Wert
average_value = king_df['Float Value'].mean()

print(f"Durchschnittlicher Wert für Fragen mit dem Wort gesuchten Wort: ${average_value:.2f}")
